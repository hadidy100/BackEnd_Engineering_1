 
 DROP DATABASE IF EXISTS FORUMSAPI; 
 CREATE DATABASE IF NOT EXISTS FORUMSAPI; 
 USE FORUMSAPI;
 
/* TABLE FOR THE FORUMS, WHICH HAS A FOREIGN KEY TO REFERENCES THE USERS TABLE SO THAT WE CAN JOIN IT AND GET THE USERS INFORMATION    */
CREATE TABLE FORUMS 
(
 FORUMTITLE VARCHAR(60), 
 FORUMID INT AUTO_INCREMENT,
 CREATORID INT,  
 TIMESTAMPS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (FORUMSID),
 FOREIGN KEY (CREATORID) REFERENCES USERS(USERID)  
);
/*FOR THE THREADS THAT ARE CREATED INSIDE THE FORUMS, AND HAS 2 FOREIGN KEYS, TO JOIN IT TO BOTH THE FORUM TABLE, SO THAT WE 
  CAN SEE WHICH FORUM DOES THIS THREAD BELONG TO, AND A REFERENCE TO THE USERS TABLE, IN ORDER TO KNOW WHO CREATED THE THREAD, SINCE ANY AUTHENTICATED USER OTHER THAN THE CREATOR OF THE FORUM CAN ACTUALLY CREATE A THREAD */ 
CREATE TABLE THREADS 
(
 THREADID INT AUTO_INCREMENT, 
 THREADTITLE VARCHAR(60),
 DATECREATED DATE, 
 TIMESTAMPS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 CREATORID INT,
 FORUMID INT NOT NULL,
 PRIMARY KEY (THREADSID),
 FOREIGN KEY (FORUMID) REFERENCES FORUMS(FORUMID),
 FOREIGN KEY (CREATORID) REFERENCES USERS(USERID) 
);
/* THE MAIN TABLE THAT HAS THE USERS INFORMATION, WHICH ALL THE OTHER TABLES CAN REFERENCE IT AND JOIN TO IT    */
CREATE TABLE USERS 
(
 USERID INT AUTO_INCREMENT, 
 FIRSTNAME VARCHAR(60), 
 LASTNAME VARCHAR(60),
 PRIMARY KEY (USERID)
);


/* A query to get all forums, who created them , and the name of the forums */
SELECT 
	FORUMID, 
	FORUMTITLE, 
	FIRSTNAME, 
	LASTNAME
FROM 
	FORUMS F, USERS  U
WHERE 
	F.CREATORID = U.USERID; 
/* A query to insert a forum, who created them , the time it was created, and the name of the forums */
insert into forums 
( 
	FORUMTITLE, 
	FIRSTNAME, 
	LASTNAME, 
	CREATORID
)
 VALUES 
 (
  ?,
  ?,
  ?,
  ?
 );
 /* A query to get all forums, who created them , and the name of the forums */
SELECT 
	T.THREADID, 
	T.THREADTITLE, 
	T.FIRSTNAME, 
	T.LASTNAME, 
	T.TIMESTAMPS
FROM 
	FORUMS F, THREADS  T
WHERE 
	F.FORUMID = T.FORUMID; 

 
